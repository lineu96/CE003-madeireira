knitr::opts_chunk$set(echo = TRUE, eval = T)
set.seed(9)
dados <- data.frame(Gastos = round(rnorm(10, 5.5, 1), 1))
knitr::kable(t(dados))
dados
round(mean(dados$Gastos), 3)
round(median(dados$Gastos), 3)
knitr::opts_chunk$set(echo = TRUE, eval = T)
set.seed(9)
dados <- data.frame(Gastos = round(rnorm(10, 5.5, 1), 1))
dados
round(mean(dados$Gastos), 3)
round(median(dados$Gastos), 3)
table(dados$Gastos)
names(sort(table(dados$Gastos))[length(table(dados$Gastos))])))
names(sort(table(dados$Gastos))[length(table(dados$Gastos))]))
names(sort(table(dados$Gastos))[length(table(dados$Gastos))])
round(var(dados$Gastos), 3)
round(sd(dados$Gastos), 3)
round(diff(range(dados$Gastos))
)
breaks <- hist(dados$Gastos, plot = F)$breaks
breaks
breaks <- hist(dados$Gastos, plot = F)$breaks
faixas <- cut(dados$Gastos,
breaks = breaks,
include.lowest = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- round(prop.table(table(faixas)), 3)
tabela$acumulada <- round(cumsum(tabela$Freq), 3)
tabela$relativa_acumulada <- round(cumsum(tabela$Freq_r), 3)
names(tabela) <- c("Gastos", "f", "$f_r$", "$f_{ac}$", "$f_{rac}$")
knitr::kable(tabela)
tabela
hist(dados$Gastos, xlab = "Gastos",
ylab = "Frequência absoluna",
main = "",
col = 0, las = T)
2.2622*(0.678/sqrt(10))
5.28-(2.2622*(0.678/sqrt(10)))
5.28+(2.2622*(0.678/sqrt(10)))
round(5.28-(2.2622*(0.678/sqrt(10))),3)
round(5.28+(2.2622*(0.678/sqrt(10))),3)
(5.28-5)/(0.678/sqrt(10))
round((5.28-5)/(0.678/sqrt(10)),3)
notas <- read.csv('controle/notas.csv', dec = ',')
names(notas)
notas <- read.csv('controle/notas.csv', dec = ',')
DT::datatable(notas[,c('GRR', 'P1', 'P2', 'P3', 'REMOTAS',
'EXAME', 'FINAL', 'SITUAÇÃO')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$EXAME))
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
table
}
#----------------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
#----------------------------------------------------------------------
notas <- read.csv('controle/notas.csv', dec = ',')
DT::datatable(notas[,c('GRR', 'P1', 'P2', 'P3', 'REMOTAS',
'EXAME', 'FINAL', 'SITUAÇÃO')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$P1))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P1,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P1,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P1, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$P2))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$P3))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P3,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P3,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 3")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P3, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$REMOTAS))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=REMOTAS,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=REMOTAS,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("REMOTAS")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=REMOTAS, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$EXAME))
p1 = ggplot(notas) +
geom_histogram(aes(x=EXAME,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=EXAME,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("EXAME")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=EXAME, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$FINAL))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=FINAL,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=FINAL,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("FINAL")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=FINAL, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
rmarkdown::render_site()
setwd("~/CE003-madeireira")
rmarkdown::render_site()
rmarkdown::render_site()
